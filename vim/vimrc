set nocompatible                " must be first line
set background=dark             " Assume a dark background

set term=$TERM                  " Make arrow and other keys work
set cursorline                  " highlight current line

" Nice color for cursolline
"hi CursorLine   cterm=NONE ctermbg=darkgrey ctermfg=white guibg=darkgrey guifg=white
hi CursorLine   cterm=NONE ctermbg=darkgrey guibg=darkgrey

set backspace=indent,eol,start  " backspace for dummys
set linespace=0                 " No extra spaces between rows
set nu                          " Line numbers on
set showmatch                   " show matching brackets/parenthesis
set incsearch                   " find as you type search
set hlsearch                    " highlight search terms

set smartcase                   " case sensitive when uc present

set smartindent                 " for indentation
set shiftwidth=4                " use indents of 4 spaces
set expandtab                   " tabs are spaces, not tabs
set tabstop=4                   " an indentation every four columns
set softtabstop=4               " let backspace delete indent

set mouse=a                     " Enable mouse scroll wheel

"Show hidden characters
"set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
"set listchars=tab:>-,trail:-
set listchars=tab:>-,
set list

" Tweak colors for list chars
highlight SpecialKey guifg=darkgrey ctermfg=darkgrey


syntax on

"  "set wildmenu" enables a menu at the bottom of the vim/gvim window.
"  The meaning of "list:longest,full" is so that when you do completion in the command line via tab, these events will happen:
"  1. (on the first tab) a list of completions will be shown and the command will be completed to the longest common command.
"  2. (on second tab) the wildmenu will show up with all the completions that were listed before.
"  To test it out, type ":spe" and then hit tab once to see 1 and hit tab again to see 2. 

set wildmenu
set wildmode=list:longest,full

"Always show a bottom status line
set laststatus=2

" Keep cursor centered vertically
set scrolloff=7


" Remove trailing spaces automatically before when saving, for specific file
" formats:
autocmd FileType c,cpp,java,php autocmd BufWritePre <buffer> :%s/\s\+$//e

" NerdTree not to show files not useful
let NERDTreeIgnore = ['\.pyc$']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set tags=~/shared/dev/MSS_NFC_DEV/EEBU_FW_DEV_NFC_V14/src/tags,~/shared/dev/MSS_NFC_DEV/8051/src/versions/current/tags,~/shared/dev/MSS_NCI_TOOLS/tags


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off                  " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'


let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"

" My bundles here:
"
" original repos on GitHub
"Bundle 'tpope/vim-fugitive'
"Bundle 'Lokaltog/vim-easymotion'
"Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
"Bundle 'tpope/vim-rails.git'
" vim-scripts repos
"Bundle 'L9'
"Bundle 'FuzzyFinder'
" non-GitHub repos
"Bundle 'git://git.wincent.com/command-t.git'
" Git repos on your local machine (i.e. when working on your own plugin)
"Bundle 'file:///Users/gmarik/path/to/plugin'
" ...
Bundle 'Valloric/YouCompleteMe'
Bundle 'The-NERD-tree'
Bundle 'systemverilog.vim'
Bundle 'Command-T'

filetype plugin indent on     " required!



