"
" NOTE: 
"  - you can reload the vim configuration on-the-fly with :so %
"  - use ':high' to show all highlighting combinations

set nocompatible                " must be first line
set background=dark             " Assume a dark background

set term=$TERM                  " Make arrow and other keys work
set cursorline                  " highlight current line

" Nice color for cursolline
"highlight CursorLine   cterm=NONE ctermbg=darkgrey ctermfg=white guibg=darkgrey guifg=white
highlight CursorLine   cterm=NONE ctermbg=darkgrey guibg=darkgrey

set backspace=indent,eol,start  " backspace for dummys
set linespace=0                 " No extra spaces between rows
set nu                          " Line numbers on
set showmatch                   " show matching brackets/parenthesis
set incsearch                   " find as you type search
set hlsearch                    " highlight search terms

set smartcase                   " case sensitive when uc present

set smartindent                 " for indentation
set shiftwidth=4                " use indents of 4 spaces
set expandtab                   " tabs are spaces, not tabs
set tabstop=4                   " an indentation every four columns
set softtabstop=4               " let backspace delete indent


set hid                         " A buffer becomes hidden when it is abandoned

set mouse=a                     " Enable mouse scroll wheel

"Show hidden characters
"set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
"set listchars=tab:>-,trail:-
set listchars=tab:>-,
set list

" Tweak colors for list chars
highlight SpecialKey guifg=darkgrey ctermfg=darkgrey

syntax on

" Colorscheme used on Mac
colorscheme distinguished

highlight StatusLineNC term=reverse cterm=bold ctermfg=231 ctermbg=31 gui=bold guifg=#ffffff guibg=#0087af guisp=Blue

"  "set wildmenu" enables a menu at the bottom of the vim/gvim window.
"  The meaning of "list:longest,full" is so that when you do completion in the command line via tab, these events will happen:
"  1. (on the first tab) a list of completions will be shown and the command will be completed to the longest common command.
"  2. (on second tab) the wildmenu will show up with all the completions that were listed before.
"  To test it out, type ":spe" and then hit tab once to see 1 and hit tab again to see 2. 

set wildmenu
set wildmode=list:longest,full

"Always show a bottom status line
set laststatus=2

" Keep cursor centered vertically
set scrolloff=7

" NerdTree not to show files not useful
let NERDTreeIgnore = ['\.pyc$']


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Language Specific here

autocmd Filetype javascript,pug setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2

" Remove trailing spaces automatically before when saving, for specific file
" formats:
autocmd FileType c,cpp,java,php,javascript,pug,arduino,make autocmd BufWritePre <buffer> :%s/\s\+$//e

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" TAGS
"set tags=<path/to/1/tags>,<path/to/2/tags>,...


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Vundle plugins manager
""
filetype off                  " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" "call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'Valloric/YouCompleteMe'
Plugin 'The-NERD-tree'
Plugin 'systemverilog.vim'
Plugin 'Command-T'
".pug / .jade files syntax highlight
Plugin 'digitaltoad/vim-pug'


"All of your Plugins must be added before the following line
call vundle#end()            " required

filetype on
filetype plugin indent on    " required



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" YCM options
""
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


